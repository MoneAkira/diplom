import groovy.json.JsonSlurperClassic

pipeline {
    agent {
        label "master"
    }
    tools {
        maven '3.8.6'
    }
    stages {
        stage ('Prepare') {
            steps {
                script {
                    app= 'calculator'
                }
            }
        }
        stage('Build') {
            steps {
                dir('Jenkins/simple_app_project/calculator') {
                    sh "docker build -t ${app} -f ${app}/Dockerfile-jenkins-build ${app}"
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    builder.appsForBuild.keySet().each { app ->
                        sh "docker run ${app} mvn test"
                    }
                }
            }
        }
         stage('Copy artifact') {
            steps {
                dir('/var/jenkins_home/workspace/git_pr/Jenkins/simple_app_project/calculator/target') {
                    archiveArtifacts artifacts: 'Calculator-1.0-SNAPSHOT.jar', followSymlinks: false
                    sh "ls -la"
                }
            }
        }
        stage('Create image') {
            steps {
                script {
                    builder.appsForBuild.each { app, value ->
                        dir("${value.path}") {
                            sh """
                            mkdir target
                            docker create --name ${app} ${app}
                            docker cp ${app}:/target/Calculator-1.0-SNAPSHOT.jar target/
                            docker rm -f ${app}
                            docker rmi -f ${app}
                            docker build -t ${dockerRegistry}/${dockerOwner}/${app}:${env.BUILD_NUMBER} -f ${app}/Dockerfile-jenkins-create .
                            """
                        }
                    }
                }
            }
        }
    //     stage('Deploy') {
    //         steps {
    //             script {
    //                json = readFile "Jenkins/simple_app_project/devops/services.json"
    //                 app = new JsonSlurperClassic().parseText(json)
    //                 dockerRegistry = "monea"
    //                 dockerOwner = "mon"
    //                 dockerImageTag= "${dockerRegistry}/${dockerOwner}/${app}"
    //                 app.keySet().each { app ->
    //                     sh """docker pull ${dockerRegistry}/${dockerOwner}/${app}
    //                     docker run -d ${dockerRegistry}/${dockerOwner}/${app}"""
    //                 }
    //         }
    //     }
    // }
}        
    post {
            success { 
        sh  ("""
            curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}*  *Build* : ` OK1`' 
        """)
        }
        aborted {
        sh  ("""
            curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}*  *Build* : `Aborted1`' 
        """) 
        }
        failure {
        sh  ("""
            curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}* *Build* : `not OK1`'
        """)    
        }
    }
}
